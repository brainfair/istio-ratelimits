apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: headers-httpbin-mtls
  namespace: istio-ingress
spec:
  workloadSelector:
    labels:
      istio: ingress-private
  configPatches:
    - applyTo: HTTP_FILTER
      match:
        context: GATEWAY
        listener:
          filterChain:
            sni: "httpbin-global-ratelimit-mtls.${cluster_subdomain}"
            filter:
              name: "envoy.filters.network.http_connection_manager"
              subFilter:
                name: "envoy.filters.http.router"
      patch:
        operation: INSERT_BEFORE
        value:
          name: envoy.filters.http.lua
          typed_config:
            "@type": "type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua"
            # https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/lua_filter.html#ssl-connection-object-api
            inlineCode: |
              function envoy_on_request(request_handle)
                local connection = request_handle:connection()
                if (connection:ssl() ~= nil and connection:ssl():peerCertificateValidated()) then
                  request_handle:headers():add("CLIENT_VERIFIED", "SUCCESS")
                  request_handle:headers():add("CLIENT_SUBJECT_DN", connection:ssl():subjectPeerCertificate())
                  request_handle:headers():add("CLIENT_ISSUER_DN", connection:ssl():issuerPeerCertificate())
                  request_handle:headers():add("CLIENT_CERTIFICATE", connection:ssl():urlEncodedPemEncodedPeerCertificate())
                  -- [[ currently not supported by Istio since parsedSubjectPeerCertificate() is introduced in Envoy 1.33.0, I guess istio 1.25 will support this
                  request_handle:headers():add("CLIENT_CN", connection:ssl():parsedSubjectPeerCertificate():commonName())
                  request_handle:headers():add("CLIENT_O", connection:ssl():parsedSubjectPeerCertificate():organizationName())
                  ]]
                end
              end
